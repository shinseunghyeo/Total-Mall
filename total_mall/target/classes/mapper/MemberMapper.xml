<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="human.smart.totalMall.MemberMapper">
	<!-- 전체 매출 불러오기 -->
	<select id="getSales" resultType="salesVO">
		SELECT COUNT(*) AS record_count, SUM(totalprice) AS totalPrice, DATE_FORMAT(o_start_date, '%Y-%m-%d') AS order_date
		FROM tb_order
		GROUP BY DATE_FORMAT(o_start_date, '%Y-%m-%d') 
		ORDER BY DATE_FORMAT(o_start_date, '%Y-%m-%d');
	</select>
	
 	<!-- 회원가입 -->
 	<insert id="join" parameterType="memberVO">
 		insert into tb_member (member_id, member_pw, member_name, handphone, email, address1, address2, address3, categorie, representative_name, company_number, mutual, mail_order_number, account1, account2, depositor_name, grade)
			values(#{member_id},#{member_pw},#{member_name},#{handphone},#{email},#{address1},#{address2},#{address3}, #{categorie}, #{representative_name}, #{company_number}, #{mutual}, #{mail_order_number}, #{account1}, #{account2}, #{depositor_name}, #{grade})
 	</insert>
 	
 	<!-- 로그인 -->
 	<select id="login" parameterType="string" resultType="memberVO">
 		select * from tb_member
 			where member_id=#{member_id}
 	</select>
 	
 	<!-- 비밀번호 가져오기 -->
	<select id="getPassword" parameterType="string" resultType="string">
		select member_pw from tb_member where member_id=#{member_id} and cancel_or_not=0
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="map" resultType="memberVO">
 		select * from tb_member 
		 		 where member_name=#{member_name} and email=#{email} 
		 		 and cancel_or_not=0
 	</select>
 	
 	<!-- 비밀번호 찾기 -->
	<select id="findPw" parameterType="map" resultType="memberVO">
 		select * from tb_member 
		 		 where member_id=#{member_id} and email=#{email} 
		 		 and cancel_or_not=0
 	</select>
 	
 	<!-- 비밀번호 변경 -->
	<update id="findPwProcess" parameterType="memberVO">
		update tb_member set member_pw=#{member_pw}, last_modified_date=now()
				         where m_idx=#{m_idx}
	
	</update>
 	
 	<!-- 한 명의 회원정보 가져오기 -->
 	<select id="getMember" parameterType="_int" resultType="memberVO">
		select * from tb_member where m_idx = #{m_idx}
	</select> 
	
	
	<!-- 회원정보 전체 가져오기 -->
	<select id="getMembers" parameterType="SearchVO" resultType="memberVO">
	<choose>
		<when test="searchWord != null"><!-- 검색어가 있는 경우  -->
			select /*+ INDEX(tb_member tb_member_pk) */
			        		*
			        		from tb_member
					<choose>
					<when test="searchField == 'grade'"><!-- 검색영역: 등급 -->
							where grade like CONCAT('%',#{searchWord},'%')
						</when>
						<when test="searchField == 'member_id'"><!-- 검색영역: 아이디 -->
							where member_id like CONCAT('%',#{searchWord},'%')
						</when>
						<when test="searchField == 'member_name'"><!-- 검색영역: 이름 -->
							where member_name like CONCAT('%',#{searchWord},'%')
						</when>
						<otherwise><!-- 검색영역: 핸드폰 -->
							where handphone like CONCAT('%',#{searchWord},'%')
						</otherwise>
					</choose>
					 		order by m_idx desc
			                limit 0, 5
		</when>
		<otherwise><!-- 검색어가 없는 경우  -->
			select /*+ INDEX(tb_member tb_member_pk) */
			        		*
			        		from tb_member
			        		order by m_idx desc
			       			limit 0, 10
		</otherwise>
	</choose>
</select>
	
	
	<!-- 회원등급 변경 -->
	<update id="gradeUpdate" parameterType="memberVO">
		update tb_member set grade=#{grade}, last_modified_date=now()
				         where m_idx=#{m_idx}
	</update>
	
	<!-- 일반 회원 회원정보 수정하기: update -->
	<update id="buyerUpdateProcess" parameterType="memberVO">
		update tb_member set member_pw=#{member_pw}, member_name=#{member_name}, handphone=#{handphone}, address1=#{address1},
							 address2=#{address2}, address3=#{address3}, categorie=#{categorie},
		                     last_modified_date=now()
				         where m_idx=#{m_idx}
	
	</update>
	<!-- 기업 회원 회원정보 수정하기: update -->
	<update id="sellerUpdateProcess" parameterType="memberVO">
		update tb_member set member_pw=#{member_pw}, member_name=#{member_name}, handphone=#{handphone}, address1=#{address1},
							 address2=#{address2}, address3=#{address3}, representative_name=#{representative_name},
							 company_number=#{company_number}, mutual=#{mutual}, mail_order_number=#{mail_order_number},
							 account1=#{account1}, account2=#{account2}, depositor_name=#{depositor_name},
		                     last_modified_date=now()
				         where m_idx=#{m_idx}
	
	</update>
	
	<!-- 회원탈퇴여부 변경 -->
	<update id="cancelUpdate" parameterType="memberVO">
		update tb_member set cancel_or_not=#{cancel_or_not}, last_modified_date=now()
				         where m_idx=#{m_idx}
	</update>
	
	
	<!-- 일반 회원 회원탈퇴하기: update -->
	<update id="cancel" parameterType="_int">
		update tb_member set cancel_or_not=1, last_modified_date=now() 
		                 where m_idx=#{m_idx}
	</update>
	
	<!-- 관리자가 받는 문의사항 전체 불러오기 -->
 	<select id="getInquirylist" resultType="VocVO">
 		select * from tb_voc
 		order by post_date desc
 	</select>
 	
 	<!-- 기업회원이 받는 문의사항 불러오기 -->
 	<select id="getInquirylistp" parameterType="_int" resultType="PvocVO">
 		SELECT * FROM tb_pvoc
		WHERE p_idx IN (
		    SELECT DISTINCT p_idx
		    FROM tb_pvoc
		    WHERE m_idx = #{m_idx}
		)
		ORDER BY post_date DESC

 	</select>
 	
 	<!-- 개인회원이 기업회원한테 쓴 문의사항 불러오기 -->
 	<select id="buyerInquirylist" parameterType="String" resultType="PvocVO">
 		select * from tb_pvoc
 		where member_id=#{member_id}
 		order by post_date desc
 	</select>
 	
 	
 	<!-- 관리자 홈 회원 현황-->
 	<select id="memberCnt" resultType="memberVO">
 		SELECT * FROM member_count_view
 	</select>
 	
 	
 	<!-- 개인회원, 기업회원이 관리자한테 한 문의 불러오기 -->
 	<select id="sellerbuyerVocList" parameterType="_int" resultType="VocVO">
 		SELECT *
	    FROM tb_voc
	    WHERE m_idx = #{m_idx}
	    ORDER BY post_date DESC
 	</select>
 	
 	<!-- 주문상세보기 페이지 요청 -->
 	<select id="getViewOrderDetails" parameterType="_int" resultType="cartVO">
		SELECT * FROM totaldb.orderlist
		where o_idx = #{o_idx}
		
	</select>
	
</mapper>