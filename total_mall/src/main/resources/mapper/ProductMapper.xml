<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="human.smart.totalMall.ProductMapper">
	
	<select id="getProduct" parameterType="_int" resultType="productVO">
		select * from tb_product where p_idx = #{p_idx}
	</select>
	<select id="getProducts" parameterType="string" resultType="productVO">
				SELECT * FROM tb_product WHERE category LIKE #{category}
				ORDER BY p_idx DESC
				LIMIT 20 OFFSET 0
	</select>
	<select id="getProducts2" parameterType="SearchVO" resultType="productVO">
		<choose>
			<when test="searchWord != null"><!-- 검색어가 있는 경우  -->
				select /*+ INDEX(tb_product tb_product_pk) */
				        		*
				        		from tb_product
						<choose>
							<when test="searchField == 'title'"><!-- 검색영역: 제목 -->
								where title like CONCAT('%',#{searchWord},'%')
							</when>
							<when test="searchField == 'content'"><!-- 검색영역: 내용 -->
								where content like CONCAT('%',#{searchWord},'%')
							</when>
							<otherwise><!-- 검색영역: 작성자 -->
								where product_name like CONCAT('%',#{searchWord},'%')
							</otherwise>
						</choose>
						 		order by p_idx desc
				                limit #{startIdx}, 5
			</when>
			<otherwise><!-- 검색어가 없는 경우  -->
				select /*+ INDEX(tb_product tb_product_pk) */
				        		*
				        		from tb_product
				        		order by p_idx desc
				       			limit #{startIdx}, 5
			</otherwise>
		</choose>
	</select>
		<!-- 총 게시물수 조회: select -->
	<select id="getTotalCount" parameterType="searchVO" resultType="_int">
		<!-- 검색어가 있는 경우와 없는 경우  -->
		<choose>
			<when test="searchWord != null">
				select count(*)
					from tb_product
					<choose>
						<when test="searchField == 'title'"><!-- 검색영역: 제목 -->
							where title like CONCAT('%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'"><!-- 검색영역: 내용 -->
							where content like CONCAT('%',#{searchWord},'%')
						</when>
						<otherwise><!-- 검색영역: 작성자 -->
							where product_name like CONCAT('%',#{searchWord},'%')
						</otherwise>
					</choose>
			</when>
			<otherwise>
				select count(*)
					from tb_product
			</otherwise>
		</choose>
	</select>
	<!-- 글 등록: insert -->
	<insert id="reInsert" parameterType="reviewVO">
		<!-- if~else구문, switch구문은 JSTL과 같이 choose-when-otherwise구문을 사용함 -->
		<choose>
			<when test="originfile_name != null"><!-- test 조건식에 사용되는 변수: 입력값에서 가져온 변수  -->
				insert into tb_review (r_idx, m_idx, member_id, member_name, content, 
				star, originfile_name, savefile_name)
				values(#{r_idx},#{m_idx},#{member_id},#{member_name} ,#{content},
				#{star}, #{originfile_name}, #{savefile_name})
			</when>
			<otherwise>
				insert into tb_review (r_idx, m_idx, member_id, member_name, content, star)
				values(#{r_idx},#{m_idx},#{member_id},#{member_name} ,#{content}, #{star})
			</otherwise>
		</choose>
	</insert>
	<!-- 상품등록: insert -->
	<insert id="insert" parameterType="ProductVO">
				insert into tb_product (m_idx, category, product_name, product_code, brand, summary, detail,
										start_date,end_date,origin_file_name1,save_file_name1,
										origin_file_name2,save_file_name2,price,discount_rate,quantity)
					   values(#{m_idx},#{category}, #{product_name}, #{product_code}, #{brand}, #{summary}, #{detail},
					   		#{start_date},#{end_date},#{origin_file_name1},#{save_file_name1},
					   		#{origin_file_name2},#{save_file_name2},#{price},#{discount_rate},#{quantity})
	</insert>
	
	<!-- 상품 수정하기: update -->
	<insert id="modify" parameterType="ProductVO">
		<choose>
			<when test="origin_file_name1 != null and origin_file_name2 != null">		
				update tb_product set category=#{category}, product_name=#{product_name}, product_code=#{product_code}, 
										brand=#{brand}, summary=#{summary}, detail=#{detail}, start_date=#{start_date}, end_date=#{end_date},
										origin_file_name1=#{origin_file_name1},save_file_name1=#{save_file_name1},
										origin_file_name2=#{origin_file_name2},save_file_name2=#{save_file_name2},
										price=#{price},discount_rate=#{discount_rate},quantity=#{quantity},p_last_modified_date=now()
					   				where p_idx=#{p_idx}
			</when>
			<when test="origin_file_name1 != null">		
				update tb_product set category=#{category}, product_name=#{product_name}, product_code=#{product_code}, 
										brand=#{brand}, summary=#{summary}, detail=#{detail}, start_date=#{start_date}, end_date=#{end_date},
										origin_file_name1=#{origin_file_name1},save_file_name1=#{save_file_name1},
										price=#{price},discount_rate=#{discount_rate},quantity=#{quantity},p_last_modified_date=now()
					   				where p_idx=#{p_idx}
			</when>
			<when test="origin_file_name2 != null">		
				update tb_product set category=#{category}, product_name=#{product_name}, product_code=#{product_code}, 
										brand=#{brand}, summary=#{summary}, detail=#{detail}, start_date=#{start_date}, end_date=#{end_date},
										origin_file_name2=#{origin_file_name2},save_file_name2=#{save_file_name2},
										price=#{price},discount_rate=#{discount_rate},quantity=#{quantity},p_last_modified_date=now()
					   				where p_idx=#{p_idx}
			</when>
			<otherwise>
				update tb_product set category=#{category}, product_name=#{product_name}, product_code=#{product_code}, 
										brand=#{brand}, summary=#{summary}, detail=#{detail}, start_date=#{start_date}, end_date=#{end_date},
										price=#{price},discount_rate=#{discount_rate},quantity=#{quantity},p_last_modified_date=now()
					   				where p_idx=#{p_idx}
			</otherwise>
		</choose>
	</insert>
	
	<!-- 상품 판매중단 처리: update -->
	<update id="discontinued" parameterType="_int">
		update tb_product set p_status=1, p_last_modified_date=now()
			   where p_idx = #{p_idx}
	</update>
	<!-- 상품 판매복구 처리: update -->
	<update id="continued" parameterType="_int">
		update tb_product set p_status=0, p_last_modified_date=now()
			   where p_idx = #{p_idx}
	</update>
	<!-- 내 상품조회: select -->
	<select id="getProducts3" parameterType="_int"
		resultType="productVO">
		SELECT * FROM tb_product WHERE m_idx LIKE #{m_idx}
		ORDER BY p_last_modified_date DESC
		LIMIT 20 OFFSET 0
	</select>
	
	<!-- 판매중인 상품 수: select -->
	<select id="p_con" resultType="_int">
        SELECT COUNT(*)
        FROM tb_product
        WHERE p_status = 0;
    </select>
    
    <!-- 판매중단 상품 수: select -->
	<select id="p_discon" resultType="_int">
        SELECT COUNT(*)
        FROM tb_product
        WHERE p_status = 1;
    </select>
	
	
	
	<!-- 장바구니 상품등록: insert -->
	<insert id="cartInsert" parameterType="CartVO">
				insert into tb_cart (c_idx, p_idx, m_idx, c_quantity )
					   values(#{c_idx},#{p_idx}, #{m_idx}, #{c_quantity})
	</insert>
	
	<!-- 장바구니 상품목록 불러오기: select -->
	<select id="getCarts" parameterType="_int" resultType="cartVO">
		select a.c_idx, a.m_idx, a.c_quantity, b.p_idx, b.product_name, b.price, b.discount_rate, b.save_file_name1
		from tb_cart a left outer join tb_product b on a.p_idx = b.p_idx 
		where a.m_idx = #{m_idx}
		and payment_or_not = 0
		
	</select>
	
	<!-- 장바구니 수량 변경하기 -->
	<update id="cartQuantityUpdate" parameterType="CartVO">
		update tb_cart set c_quantity=#{c_quantity}
			where m_idx=#{m_idx}
			and p_idx=#{p_idx}
			and payment_or_not = 0
	</update>
	
	<!-- 장바구니 삭제하기 -->
	<delete id="cartDelete" parameterType="CartVO">
		delete from tb_cart 
				where m_idx=#{m_idx}
				and p_idx=#{p_idx}
				and payment_or_not = 0
	</delete>
	
	<!-- 장바구니에서 결제여부 변경하기 -->
	<update id="cartPaymentUpdate" parameterType="_int">
		update tb_cart set payment_or_not=1
			where m_idx=#{m_idx}
	</update>
	
	<!-- 장바구니 상품 확인하기 -->
	<select id="cartCheck" parameterType="CartVO" resultType="CartVO">
		select * from tb_cart where p_idx = #{p_idx}
							  and m_idx = #{m_idx}
	</select>
	
	<!-- 주문테이블 상품 추가하기 -->
	<insert id="orderInsert" parameterType="OrderVO">
				insert into tb_order (o_idx, m_idx, pay, totalprice, requests )
					   values(#{o_idx},#{m_idx}, #{pay}, #{totalprice}, #{requests})
	</insert>
	
	<!-- 직접 구매 상품 장바구니 상품등록: insert -->
	<insert id="cartInsert2" parameterType="CartVO">
				insert into tb_cart (c_idx, p_idx, m_idx, c_quantity, payment_or_not )
					   values(#{c_idx},#{p_idx}, #{m_idx}, #{c_quantity}, 1)
	</insert>
	
</mapper>